class Solution
{
    public:
    
        void findlps(string &pat,int m,vector<int>&lps){
            
            lps[0]=0;
            int i=1;
            int len=0;
            while(i<m){
                if(pat[i]==pat[len]){
                    len++;
                    lps[i]=len;
                    i++;
                }
                else{
                    if(len!=0){
                        len =lps[len-1];
                    }
                    else{
                        lps[i]=0;
                        i++;
                    }
                }
            }
        }
    
        vector <int> search(string pat, string txt)
        {
            //code here
            vector<int>ans;
            
            
            int i=0,j=0;
            int n =txt.length();
            int m =pat.length();
            vector<int>lps(m,0);
            
            findlps(pat,m,lps);
            while(i<n){
                if(txt[i]==pat[j]){
                    i++;
                    j++;
                }
                if(j==m){
                    ans.push_back(i-m+1);
                    j=lps[j-1];
                }
                else if(txt[i]!=pat[j]){
                    if(j!=0){
                        j=lps[j-1];
                    }
                    else{
                        i++;
                    }
                }
            }
            return ans;
        }
     
};
